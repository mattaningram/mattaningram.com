{
	"version": 3,
	"file": "main.css",
	"sources": [
		"main.scss",
		"_sass/_variables.scss",
		"_sass/plugins/bourbon/_bourbon.scss",
		"_sass/plugins/bourbon/settings/_prefixer.scss",
		"_sass/plugins/bourbon/settings/_px-to-em.scss",
		"_sass/plugins/bourbon/settings/_asset-pipeline.scss",
		"_sass/plugins/bourbon/functions/_assign-inputs.scss",
		"_sass/plugins/bourbon/functions/_contains.scss",
		"_sass/plugins/bourbon/functions/_contains-falsy.scss",
		"_sass/plugins/bourbon/functions/_is-length.scss",
		"_sass/plugins/bourbon/functions/_is-light.scss",
		"_sass/plugins/bourbon/functions/_is-number.scss",
		"_sass/plugins/bourbon/functions/_is-size.scss",
		"_sass/plugins/bourbon/functions/_px-to-em.scss",
		"_sass/plugins/bourbon/functions/_px-to-rem.scss",
		"_sass/plugins/bourbon/functions/_shade.scss",
		"_sass/plugins/bourbon/functions/_strip-units.scss",
		"_sass/plugins/bourbon/functions/_tint.scss",
		"_sass/plugins/bourbon/functions/_transition-property-name.scss",
		"_sass/plugins/bourbon/functions/_unpack.scss",
		"_sass/plugins/bourbon/functions/_modular-scale.scss",
		"_sass/plugins/bourbon/helpers/_convert-units.scss",
		"_sass/plugins/bourbon/helpers/_directional-values.scss",
		"_sass/plugins/bourbon/helpers/_font-source-declaration.scss",
		"_sass/plugins/bourbon/helpers/_gradient-positions-parser.scss",
		"_sass/plugins/bourbon/helpers/_linear-angle-parser.scss",
		"_sass/plugins/bourbon/helpers/_linear-gradient-parser.scss",
		"_sass/plugins/bourbon/helpers/_linear-positions-parser.scss",
		"_sass/plugins/bourbon/helpers/_linear-side-corner-parser.scss",
		"_sass/plugins/bourbon/helpers/_radial-arg-parser.scss",
		"_sass/plugins/bourbon/helpers/_radial-positions-parser.scss",
		"_sass/plugins/bourbon/helpers/_radial-gradient-parser.scss",
		"_sass/plugins/bourbon/helpers/_render-gradients.scss",
		"_sass/plugins/bourbon/helpers/_shape-size-stripper.scss",
		"_sass/plugins/bourbon/helpers/_str-to-num.scss",
		"_sass/plugins/bourbon/css3/_animation.scss",
		"_sass/plugins/bourbon/css3/_appearance.scss",
		"_sass/plugins/bourbon/css3/_backface-visibility.scss",
		"_sass/plugins/bourbon/css3/_background.scss",
		"_sass/plugins/bourbon/css3/_background-image.scss",
		"_sass/plugins/bourbon/css3/_border-image.scss",
		"_sass/plugins/bourbon/css3/_calc.scss",
		"_sass/plugins/bourbon/css3/_columns.scss",
		"_sass/plugins/bourbon/css3/_filter.scss",
		"_sass/plugins/bourbon/css3/_flex-box.scss",
		"_sass/plugins/bourbon/css3/_font-face.scss",
		"_sass/plugins/bourbon/css3/_font-feature-settings.scss",
		"_sass/plugins/bourbon/css3/_hidpi-media-query.scss",
		"_sass/plugins/bourbon/css3/_hyphens.scss",
		"_sass/plugins/bourbon/css3/_image-rendering.scss",
		"_sass/plugins/bourbon/css3/_keyframes.scss",
		"_sass/plugins/bourbon/css3/_linear-gradient.scss",
		"_sass/plugins/bourbon/css3/_perspective.scss",
		"_sass/plugins/bourbon/css3/_placeholder.scss",
		"_sass/plugins/bourbon/css3/_radial-gradient.scss",
		"_sass/plugins/bourbon/css3/_selection.scss",
		"_sass/plugins/bourbon/css3/_text-decoration.scss",
		"_sass/plugins/bourbon/css3/_transform.scss",
		"_sass/plugins/bourbon/css3/_transition.scss",
		"_sass/plugins/bourbon/css3/_user-select.scss",
		"_sass/plugins/bourbon/addons/_border-color.scss",
		"_sass/plugins/bourbon/addons/_border-radius.scss",
		"_sass/plugins/bourbon/addons/_border-style.scss",
		"_sass/plugins/bourbon/addons/_border-width.scss",
		"_sass/plugins/bourbon/addons/_buttons.scss",
		"_sass/plugins/bourbon/addons/_clearfix.scss",
		"_sass/plugins/bourbon/addons/_ellipsis.scss",
		"_sass/plugins/bourbon/addons/_font-stacks.scss",
		"_sass/plugins/bourbon/addons/_hide-text.scss",
		"_sass/plugins/bourbon/addons/_margin.scss",
		"_sass/plugins/bourbon/addons/_padding.scss",
		"_sass/plugins/bourbon/addons/_position.scss",
		"_sass/plugins/bourbon/addons/_prefixer.scss",
		"_sass/plugins/bourbon/addons/_retina-image.scss",
		"_sass/plugins/bourbon/addons/_size.scss",
		"_sass/plugins/bourbon/addons/_text-inputs.scss",
		"_sass/plugins/bourbon/addons/_timing-functions.scss",
		"_sass/plugins/bourbon/addons/_triangle.scss",
		"_sass/plugins/bourbon/addons/_word-wrap.scss",
		"_sass/plugins/bourbon/_bourbon-deprecated-upcoming.scss",
		"_sass/plugins/_mq.scss",
		"_sass/_typography.scss",
		"_sass/_animations.scss",
		"_sass/_structure.scss",
		"_sass/_beliefs.scss",
		"_sass/_page.scss",
		"_sass/_work.scss",
		"_sass/m-logos/_mLogoRandomLine.scss",
		"_sass/m-logos/_mLogoRedBlue.scss",
		"_sass/m-logos/_mLogoParallax.scss"
	],
	"sourcesContent": [
		"@charset \"utf-8\";\n\n@import \"variables\";\n\n@import \"plugins/bourbon/bourbon\";\n@import \"plugins/mq\";\n\n@import \"typography\";\n@import \"animations\";\n@import \"structure\";\n@import \"beliefs\";\n@import \"page\";\n@import \"work\";\n\n@import \"m-logos/mLogoRandomLine\";\n@import \"m-logos/mLogoRedBlue\";\n@import \"m-logos/mLogoParallax\";\n",
		"$primaryBlue:             rgb(0, 180, 204);\n$primaryRed:              rgb(237, 35, 50);\n$bg-color:                rgb(34, 45, 56);\n\n\n// Grays\n// -------------------------\n$black:                   rgb(0, 0, 0);\n\n$white:                   rgb(255, 255, 255);\n\n\n//Translucents\n\n$translucent-white:       rgba(255,255,255,0.85);\n$translucent-black:       rgba(0,0,0,0.85);\n\n\n// Default colors\n// -------------------------\n\n\n// Links\n// -------------------------\n// $linkColor:         $teal;\n\n\n// PADDINGS & MARGINS\n\n$marginSm:    20px;\n$paddingSm:   $marginSm;\n\n$marginMd:    30px;\n$paddingMd:   $marginMd;\n\n$marginLg:    40px;\n$paddingLg:   $marginLg;\n\n\n// Z-Indices\n// -------------------------\n$zSVG:              50;\n$zStandard:         100;\n$zMiddle:           500;\n$zBelowNav:\t\t\t\t\t999;\n$zNav:              1000;\n$zMainNav:          1001;\n$zTop:              9999;\n\n\n// Shadows\n\n$shadowSm:   0 5px 15px rgba(0,0,0,.50);\n$shadowMd:   0 5px 30px rgba(0,0,0,.50);\n",
		"// Bourbon 4.2.7\n// http://bourbon.io\n// Copyright 2011-2015 thoughtbot, inc.\n// MIT License\n\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n@import \"functions/assign-inputs\";\n@import \"functions/contains\";\n@import \"functions/contains-falsy\";\n@import \"functions/is-length\";\n@import \"functions/is-light\";\n@import \"functions/is-number\";\n@import \"functions/is-size\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/shade\";\n@import \"functions/strip-units\";\n@import \"functions/tint\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n@import \"functions/modular-scale\";\n\n@import \"helpers/convert-units\";\n@import \"helpers/directional-values\";\n@import \"helpers/font-source-declaration\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/hyphens\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/placeholder\";\n@import \"css3/radial-gradient\";\n@import \"css3/selection\";\n@import \"css3/text-decoration\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n\n@import \"addons/border-color\";\n@import \"addons/border-radius\";\n@import \"addons/border-style\";\n@import \"addons/border-width\";\n@import \"addons/buttons\";\n@import \"addons/clearfix\";\n@import \"addons/ellipsis\";\n@import \"addons/font-stacks\";\n@import \"addons/hide-text\";\n@import \"addons/margin\";\n@import \"addons/padding\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/text-inputs\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n@import \"bourbon-deprecated-upcoming\";\n",
		"@charset \"UTF-8\";\n\n/// Global variables to enable or disable vendor prefixes\n\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default;\n",
		"$em-base: 16px !default;\n",
		"@charset \"UTF-8\";\n\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\n///\n/// @type Bool\n\n$asset-pipeline: false !default;\n",
		"@function assign-inputs($inputs, $pseudo: null) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @param {List} $values\n///   A single value or list of values to check for.\n///\n/// @example scss - Usage\n///   contains($list, $value)\n///\n/// @return {Bool}\n\n@function contains($list, $values...) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks if a list does not contains a value.\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @return {Bool}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @param {String} $value\n\n@function is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n",
		"@charset \"UTF-8\";\n\n/// Programatically determines whether a color is light or dark.\n///\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\n///\n/// @param {Color (Hex)} $color\n///\n/// @example scss - Usage\n///   is-light($color)\n///\n/// @return {Bool}\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1));\n  $-local-green: green(rgba($hex-color, 1));\n  $-local-blue: blue(rgba($hex-color, 1));\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > 0.6;\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @param {Number} $value\n///\n/// @require {function} contains\n\n@function is-number($value) {\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n",
		"@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @param {String} $value\n///\n/// @require {function} contains\n/// @require {function} is-length\n\n@function is-size($value) {\n  @return is-length($value)\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n",
		"// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n",
		"// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n",
		"@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n",
		"@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @param {Number (With Unit)} $value\n///\n/// @example scss - Usage\n///   $dimension: strip-units(10em);\n///\n/// @example css - CSS Output\n///   $dimension: 10;\n///\n/// @return {Number (Unitless)}\n\n@function strip-units($value) {\n  @return ($value / ($value * 0 + 1));\n}\n",
		"@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n",
		"// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n\n  @return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Converts shorthand to the 4-value syntax.\n///\n/// @param {List} $shorthand\n///\n/// @example scss - Usage\n///   .element {\n///     margin: unpack(1em 2em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n",
		"// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n",
		"//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n\n  @if type-of($number) != \"number\" {\n    @warn \"`#{$number} is not a number`\";\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n",
		"@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n",
		"// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n",
		"@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n",
		"@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: is-number(str-slice($first-val, 1, 1));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n",
		"@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatibility\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatibility\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n  @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n",
		"@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\n  @each $value in $g1, $g2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $g1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $g1 {\n            $g1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $g1 {\n            $g1: null;\n          }\n\n          @else if $value == $g2 {\n            $g2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $g1, $g2, $pos, $shape-size;\n}\n",
		"@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != \"  \") {\n    $spec: \"#{$spec},\";\n  }\n\n  @return $pre-spec $spec;\n}\n",
		"@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    );\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n",
		"// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n",
		"@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n",
		"//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    }\n\n    @else if $character == \".\" {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n",
		"// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n@mixin animation($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n@mixin animation-name($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n@mixin animation-duration($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n@mixin animation-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n@mixin animation-iteration-count($values...) {\n  // infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n@mixin animation-direction($directions...) {\n  // normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n@mixin animation-play-state($states...) {\n  // running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n@mixin animation-delay($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n@mixin animation-fill-mode($modes...) {\n  // none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n",
		"@mixin appearance($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n",
		"@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n",
		"//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 1, 3);\n      $gradient-type: str-slice($background-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n      $spec-background:   $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n",
		"//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 1, 3);\n      $gradient-type: str-slice($image, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n        $spec-image:   $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n",
		"@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 1, 3);\n      $gradient-type: str-slice($border-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n      $spec-border:   $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n",
		"@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}: calc(#{$value});\n}\n",
		"@mixin columns($arg: auto) {\n  // <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n  // auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n  // normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n  // auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n  // <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n  // none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n  // auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n",
		"@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n",
		"// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n",
		"@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n",
		"@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}\n",
		"// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: round($ratio * 96dpi)),\n  only screen and (min-resolution: $ratio * 1dppx) {\n    @content;\n  }\n}\n",
		"@mixin hyphens($hyphenation: none) {\n  // none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}\n",
		"@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n\n  @else {\n    image-rendering: $mode;\n  }\n}\n",
		"// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n",
		"@mixin linear-gradient($pos, $g1, $g2: null,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\n    $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Set $g1 as the default fallback color\n  $fallback-color: nth($g1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n",
		"@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n",
		"@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n",
		"// Requires Sass 3.1+\n@mixin radial-gradient($g1, $g2,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\n  $g1:  nth($data, 1);\n  $g2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $g1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\n  $pos:        if($pos, \"#{$pos}, \", null);\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\n}\n",
		"@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin text-decoration($value) {\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\n  @include prefixer(text-decoration, $value, moz);\n}\n\n@mixin text-decoration-line($line: none) {\n// none || underline || overline || line-through\n  @include prefixer(text-decoration-line, $line, moz);\n}\n\n@mixin text-decoration-style($style: solid) {\n// solid || double || dotted || dashed || wavy\n  @include prefixer(text-decoration-style, $style, moz webkit);\n}\n\n@mixin text-decoration-color($color: currentColor) {\n// currentColor || <color>\n  @include prefixer(text-decoration-color, $color, moz);\n}\n",
		"@mixin transform($property: none) {\n  // none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n",
		"// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n",
		"@mixin user-select($value: none) {\n  @include prefixer(user-select, $value, webkit moz ms spec);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-color`\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\n///\n/// @param {Number} $radii\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element-one {\n///     @include border-top-radius(5px);\n///   }\n///\n///   .element-two {\n///     @include border-left-radius(3px);\n///   }\n///\n/// @example css - CSS Output\n///   .element-one {\n///     border-top-left-radius: 5px;\n///     border-top-right-radius: 5px;\n///   }\n///\n///   .element-two {\n///     border-bottom-left-radius: 3px;\n///     border-top-left-radius: 3px;\n///   }\n///\n/// @output `border-radius`\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-style`\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-width`\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\n///\n/// @example scss - Usage\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   #{$all-buttons-focus},\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n/// @example css - CSS Output\n///   button,\n///   input[type=\"button\"],\n///   input[type=\"reset\"],\n///   input[type=\"submit\"] {\n///     background-color: #f00;\n///   }\n///\n///   button:focus,\n///   input[type=\"button\"]:focus,\n///   input[type=\"reset\"]:focus,\n///   input[type=\"submit\"]:focus,\n///   button:hover,\n///   input[type=\"button\"]:hover,\n///   input[type=\"reset\"]:hover,\n///   input[type=\"submit\"]:hover {\n///     background-color: #0f0;\n///   }\n///\n///   button:active,\n///   input[type=\"button\"]:active,\n///   input[type=\"reset\"]:active,\n///   input[type=\"submit\"]:active {\n///     background-color: #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n///\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\n\n$buttons-list: 'button',\n               'input[type=\"button\"]',\n               'input[type=\"reset\"]',\n               'input[type=\"submit\"]';\n\n$all-buttons:        assign-inputs($buttons-list);\n$all-buttons-active: assign-inputs($buttons-list, active);\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\n\n$all-button-inputs:        $all-buttons;\n$all-button-inputs-active: $all-buttons-active;\n$all-button-inputs-focus:  $all-buttons-focus;\n$all-button-inputs-hover:  $all-buttons-hover;\n",
		"@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @param {Number} $width [100%]\n///   Max-width for the string to respect before being truncated\n///\n/// @example scss - Usage\n///   .element {\n///     @include ellipsis;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n",
		"@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n",
		"/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\n///\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\n///\n/// @example scss - Usage\n///   .element {\n///     @include hide-text;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n///\n/// @todo Remove height argument in v5.0.0\n\n@mixin hide-text($height: null) {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n\n  @if $height {\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include margin(null 10px 3em 20vh);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-bottom: 3em;\n///     margin-left: 20vh;\n///     margin-right: 10px;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `margin`\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include padding(12vh null 10px 5%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 12vh;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `padding`\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n",
		"@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  } @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    } @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\n///\n/// @example scss - Usage\n///   #{$all-text-inputs} {\n///     border: 1px solid #f00;\n///   }\n///\n///   #{$all-text-inputs-focus},\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #0f0;\n///   }\n///\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #00f;\n///   }\n///\n/// @example css - CSS Output\n///   input[type=\"color\"],\n///   input[type=\"date\"],\n///   input[type=\"datetime\"],\n///   input[type=\"datetime-local\"],\n///   input[type=\"email\"],\n///   input[type=\"month\"],\n///   input[type=\"number\"],\n///   input[type=\"password\"],\n///   input[type=\"search\"],\n///   input[type=\"tel\"],\n///   input[type=\"text\"],\n///   input[type=\"time\"],\n///   input[type=\"url\"],\n///   input[type=\"week\"],\n///   textarea {\n///     border: 1px solid #f00;\n///   }\n///\n///   input[type=\"color\"]:focus,\n///   input[type=\"date\"]:focus,\n///   input[type=\"datetime\"]:focus,\n///   input[type=\"datetime-local\"]:focus,\n///   input[type=\"email\"]:focus,\n///   input[type=\"month\"]:focus,\n///   input[type=\"number\"]:focus,\n///   input[type=\"password\"]:focus,\n///   input[type=\"search\"]:focus,\n///   input[type=\"tel\"]:focus,\n///   input[type=\"text\"]:focus,\n///   input[type=\"time\"]:focus,\n///   input[type=\"url\"]:focus,\n///   input[type=\"week\"]:focus,\n///   textarea:focus,\n///   input[type=\"color\"]:hover,\n///   input[type=\"date\"]:hover,\n///   input[type=\"datetime\"]:hover,\n///   input[type=\"datetime-local\"]:hover,\n///   input[type=\"email\"]:hover,\n///   input[type=\"month\"]:hover,\n///   input[type=\"number\"]:hover,\n///   input[type=\"password\"]:hover,\n///   input[type=\"search\"]:hover,\n///   input[type=\"tel\"]:hover,\n///   input[type=\"text\"]:hover,\n///   input[type=\"time\"]:hover,\n///   input[type=\"url\"]:hover,\n///   input[type=\"week\"]:hover,\n///   textarea:hover {\n///     border: 1px solid #0f0;\n///   }\n///\n///   input[type=\"color\"]:active,\n///   input[type=\"date\"]:active,\n///   input[type=\"datetime\"]:active,\n///   input[type=\"datetime-local\"]:active,\n///   input[type=\"email\"]:active,\n///   input[type=\"month\"]:active,\n///   input[type=\"number\"]:active,\n///   input[type=\"password\"]:active,\n///   input[type=\"search\"]:active,\n///   input[type=\"tel\"]:active,\n///   input[type=\"text\"]:active,\n///   input[type=\"time\"]:active,\n///   input[type=\"url\"]:active,\n///   input[type=\"week\"]:active,\n///   textarea:active {\n///     border: 1px solid #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n\n$text-inputs-list: 'input[type=\"color\"]',\n                   'input[type=\"date\"]',\n                   'input[type=\"datetime\"]',\n                   'input[type=\"datetime-local\"]',\n                   'input[type=\"email\"]',\n                   'input[type=\"month\"]',\n                   'input[type=\"number\"]',\n                   'input[type=\"password\"]',\n                   'input[type=\"search\"]',\n                   'input[type=\"tel\"]',\n                   'input[type=\"text\"]',\n                   'input[type=\"time\"]',\n                   'input[type=\"url\"]',\n                   'input[type=\"week\"]',\n                   'input:not([type])',\n                   'textarea';\n\n$all-text-inputs:        assign-inputs($text-inputs-list);\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\n",
		"@charset \"UTF-8\";\n\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n///\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\n///\n/// @type cubic-bezier\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n",
		"@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n",
		"@charset \"UTF-8\";\n\n/// Provides an easy way to change the `word-wrap` property.\n///\n/// @param {String} $wrap [break-word]\n///   Value for the `word-break` property.\n///\n/// @example scss - Usage\n///   .wrapper {\n///     @include word-wrap(break-word);\n///   }\n///\n/// @example css - CSS Output\n///   .wrapper {\n///     overflow-wrap: break-word;\n///     word-break: break-all;\n///     word-wrap: break-word;\n///   }\n\n@mixin word-wrap($wrap: break-word) {\n  overflow-wrap: $wrap;\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n",
		"// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n",
		"@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",
		"$fontBody:    \"Source Sans Pro\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n$fontHead:    \"Source Sans Pro\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\n\nhtml, body {\n  color: white;\n  font-family: $fontBody;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 1.5;\n}\n\na {\n  color: currentColor;\n}\n\n.text-white {\n  color: white;\n}\n\nh1, h2, h3, h4 {\n  font-family: $fontHead;\n  font-weight: 600;\n  line-height: 1.2;\n}\n\nh1 {\n  font-size: 2rem;\n}\n\nh2 {\n  font-size: 1.6rem;\n}\n\nh3 {\n  font-size: 1.3rem;\n}\n\np {\n  font-size: 1.25rem;\n  margin-bottom: 1.25rem;\n}\n",
		"//KEYFRAMES\n\n//FADE\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n//SHRINK\n\n@keyframes fadeInShrink {\n  from {\n    opacity: 0;\n    transform: scale(3,3);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1,1);\n  }\n}\n\n@keyframes fadeOutShrink {\n  from {\n    opacity: 1;\n    transform: scale(1,1);\n  }\n  to {\n    opacity: 0;\n    transform: scale(0,0);\n  }\n}\n\n//GROW\n\n@keyframes fadeInGrow {\n  from {\n    opacity: 0;\n    transform: scale(0.25,0.25);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1,1);\n  }\n}\n\n@keyframes fadeOutGrow {\n  from {\n    opacity: 1;\n    transform: scale(1,1);\n  }\n  to {\n    opacity: 0;\n    transform: scale(3,3);\n  }\n}\n\n//DOWN\n\n@keyframes fadeInDown {\n  from {\n    opacity: 0;\n    transform: translate3d(0, -30px, 0);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeInDown100 {\n  from {\n    opacity: 0;\n    transform: translate3d(0, -100%, 0);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutDown {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(0, 30px, 0);\n  }\n}\n\n@keyframes fadeOutDown100 {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(0, 100%, 0);\n  }\n}\n\n//UP\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translate3d(0, 30px, 0);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeInUp100 {\n  from {\n    opacity: 0;\n    transform: translate3d(0, 100%, 0);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutUp {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(0, -30px, 0);\n  }\n}\n\n@keyframes fadeOutUp100 {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(0, -100%, 0);\n  }\n}\n\n//LEFT\n\n@keyframes fadeInLeft {\n  from {\n    opacity: 0;\n    transform: translate3d(-30px, 0, 0);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeInLeft100 {\n  from {\n    opacity: 0;\n    transform: translate3d(-100%, 0, 0);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutLeft {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(-30px, 0, 0);\n  }\n}\n\n@keyframes fadeOutLeft100 {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(-100%, 0, 0);\n  }\n}\n\n//RIGHT\n\n@keyframes fadeInRight {\n  from {\n    opacity: 0;\n    transform: translate3d(30px, 0, 0);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeInRight {\n  from {\n    opacity: 0;\n    transform: translate3d(100%, 0, 0);\n  }\n  to {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutRight {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(30px, 0, 0);\n  }\n}\n\n@keyframes fadeOutRight100 {\n  from {\n    opacity: 1;\n    transform: none;\n  }\n  to {\n    opacity: 0;\n    transform: translate3d(100%, 0, 0);\n  }\n}\n\n//UP-RIGHT\n\n@keyframes fadeInUpRight100 {\n  0% {\n    opacity: 0;\n    transform: translate3d(100%, -100%, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutUpRight100 {\n  0% {\n    opacity: 1;\n    transform: none;\n  }\n  100% {\n    opacity: 0;\n    transform: translate3d(100%, -100%, 0);\n  }\n}\n\n//UP-LEFT\n\n@keyframes fadeInUpLeft100 {\n  0% {\n    opacity: 0;\n    transform: translate3d(-100%, -100%, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutUpLeft100 {\n  0% {\n    opacity: 1;\n    transform: none;\n  }\n  100% {\n    opacity: 0;\n    transform: translate3d(-100%, -100%, 0);\n  }\n}\n\n//DOWN-RIGHT\n\n@keyframes fadeInDownRight100 {\n  0% {\n    opacity: 0;\n    transform: translate3d(100%, 100%, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutDownRight100 {\n  0% {\n    opacity: 1;\n    transform: none;\n  }\n  100% {\n    opacity: 0;\n    transform: translate3d(100%, 100%, 0);\n  }\n}\n\n//DOWN-LEFT\n\n@keyframes fadeInDownLeft100 {\n  0% {\n    opacity: 0;\n    transform: translate3d(-100%, 100%, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: none;\n  }\n}\n\n@keyframes fadeOutDownLeft100 {\n  0% {\n    opacity: 1;\n    transform: none;\n  }\n  100% {\n    opacity: 0;\n    transform: translate3d(-100%, 100%, 0);\n  }\n}\n",
		"html {\n  background-color: $bg-color;\n  overflow-x: hidden;\n}\n\nbody {\n  margin: 0;\n  overflow-x: hidden;\n\n  @include mq($until: tablet) {\n    cursor: pointer;\n  }\n}\n\nsvg {\n  width: 100%;\n  display: block;\n  overflow: visible;\n}\n\nsvg:not(:root) {\n  overflow: visible;\n}\n\na.no-outline:focus {\n  outline: none;\n}\n\n.page-content {\n  margin: 0;\n  min-height: 100vh;\n}\n\n.m-center-wrap {\n  width: 100%;\n  height: 90vh;\n  min-height: 440px;\n  max-height: 900px;\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.m-logo-section {\n  position: relative;\n}\n\n.instructions-wrap {\n  position: relative;\n  top: -10vh;\n  text-align: center;\n}\n\n.m-instructions {\n  opacity: .35;\n  font-size: .75rem;\n  text-transform: uppercase;\n  letter-spacing: .075rem;\n  cursor: pointer;\n}\n\n.m-logo-wrap {\n  width: 240px;\n  height: 240px;\n  cursor: pointer;\n  margin: 0 auto;\n  margin-bottom: 24px;\n  display: block;\n  position: relative;\n}\n\n.main-footer {\n  text-align: center;\n  position: relative;\n  margin: 0 auto;\n  margin-top: 30px;\n  padding-bottom: 10px;\n}\n\n.my-name {\n  opacity: 0;\n  animation: fadeIn .75s $ease-in-quad .5s forwards;\n  text-align: center;\n  letter-spacing: 0.03em;\n  margin-bottom: 8px;\n}\n\n.my-description {\n  opacity: 0;\n  animation: fadeIn .75s $ease-in-quad .7s forwards;\n  text-align: center;\n  color: rgba(255,255,255,0.65);\n  font-size: 1.2rem;\n  font-weight: 300;\n  margin-bottom: 20px;\n}\n\n.button--themed {\n  position: relative;\n  z-index: 1;\n  display: block;\n  text-align: center;\n  font-size: 1.25rem;\n  font-weight: 600;\n  text-decoration: none;\n  width: 180px;\n  height: 40px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background-color: currentColor;\n  box-shadow: 0 0 0 transparent;\n  transition: all .25s ease-out;\n\n  &:before, &:after {\n    content: \"\";\n    background-color: currentColor;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    transition: all .25s $ease-out-back;\n  }\n\n  &:before {\n    opacity: 0.15;\n    left: 16px;\n    right: 16px;\n    transform: translate(0, 10px);\n  }\n\n  &:after {\n    opacity: 0.35;\n    left: 8px;\n    right: 8px;\n    transform: translate(0, 5px);\n  }\n\n  &:hover, &:focus {\n    outline: 0;\n\n    &:before {\n      top: -16px;\n      left: -16px;\n      right: -16px;\n      bottom: -16px;\n      transform: translate(0, 0);\n    }\n\n    &:after {\n      top: -8px;\n      left: -8px;\n      right: -8px;\n      bottom: -8px;\n      transform: translate(0, 0);\n    }\n  }\n\n  &:active {\n    &:before {\n      top: -32px;\n      left: -32px;\n      right: -32px;\n      bottom: -32px;\n      transform: translate(0, 0);\n    }\n\n    &:after {\n      top: -16px;\n      left: -16px;\n      right: -16px;\n      bottom: -16px;\n      transform: translate(0, 0);\n    }\n  }\n\n  .button__text {\n    color: $bg-color;\n    font-size: 0.85em;\n    transition: all .2s ease-out;\n    z-index: 10;\n    position: relative;\n  }\n}\n\n//PAGE HEADER\n\n.site-header {\n  position: fixed;\n  z-index: 100;\n  top: 0;\n  left: 0;\n  padding: $paddingMd;\n  transition: all .15s $ease-out-quad;\n  .m-logo-wrap {\n    transition: all .15s $ease-out-quad;\n    margin: 0;\n    width: 50px;\n    height: 50px;\n  }\n  @include mq($until: tablet) {\n    padding: $paddingSm;\n    .m-logo-wrap {\n      width: 40px;\n      height: 40px;\n    }\n  }\n}\n\n//SECTIONS\n\n.section-wrap {\n  margin: 0 auto;\n  margin-bottom: $marginLg * 2;\n}\n\n.section-header {\n  text-align: center;\n  margin-bottom: $marginLg;\n}\n\n.section-title {\n  font-size: 2.5rem;\n  font-weight: 400;\n}\n\n//FOOTER\n\n.social-links-wrap {\n  opacity: 0;\n  animation: fadeIn .75s $ease-in-quad .9s forwards;\n}\n\n.email-me {\n  margin: 1.25rem auto;\n  margin-top: 1rem;\n}\n\n.footer-text {\n  font-size: .8em;\n  opacity: 0.75;\n  color: white;\n}\n\n.link-icon-wrap {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n}\n\n.link-icon {\n  width: 20px;\n  display: inline-block;\n  transition: all .2s ease-out;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  .icon-fill {\n    fill: currentColor;\n  }\n\n  &:hover, &:focus {\n    transform: scale(1.25);\n  }\n\n  &:focus {\n    outline: 1px solid currentColor;\n    outline-offset: 2px;\n  }\n}\n\n//HOVER GIFS\n\n.gif-hover {\n  cursor: pointer;\n  position: relative;\n  white-space: nowrap;\n  &:before {\n    content: \"\";\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(1, 0);\n    transition: all .2s $ease-out-back;\n  }\n  &:after {\n    content: \"\";\n    background-color: transparentize($primaryBlue, .6);\n    position: absolute;\n    z-index: -1;\n    bottom: .15em;\n    left: 0;\n    right: 0;\n    height: .25em;\n    transition: all .15s ease-out;\n  }\n  &:hover {\n    &:before {\n      content: \"\";\n      width: 388px;\n      height: 291px;\n      background-image: url(\"/assets/gifs/1984mac.gif\");\n      position: absolute;\n      z-index: -2;\n      opacity: 1;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1, 1);\n      pointer-events: none;\n      box-shadow: inset 0 0 50px 30px $bg-color, inset 0 0 0 5px $bg-color;\n      border-radius: 20px;\n    }\n    &:after {\n      height: 1em;\n    }\n  }\n}\n\n.gif-hover-topgun {\n  &:hover {\n    &:before {\n      width: 480px;\n      height: 241px;\n      background-image: url(\"/assets/gifs/topgun.gif\");\n    }\n  }\n}\n\n.gif-hover-sesame {\n  &:hover {\n    &:before {\n      width: 480px;\n      height: 360px;\n      background-image: url(\"/assets/gifs/sesame.gif\");\n    }\n  }\n}\n",
		".beliefs-list-wrap {\n  width: 1024px;\n  max-width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  @include mq($until: tablet) {\n    flex-wrap: nowrap;\n    overflow-x: scroll;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n\n.belief-item {\n  padding: 0 $paddingMd;\n  &:not(:last-child) {\n    margin-bottom: $marginLg;\n  }\n  width: 280px;\n  flex-grow: 1;\n  @include mq($until: tablet) {\n    min-width: 320px;\n    padding: 0 $paddingSm;\n  }\n}\n\n.belief-item-header {\n  font-size: 1.25rem;\n  margin-bottom: 10px;\n}\n\n.belief-item-copy {\n  font-size: 1rem;\n  margin: 0;\n  opacity: .85;\n}\n",
		"//PAGE CONTENT\n\n.page-wrap {\n  max-width: 100%;\n  margin: 0 auto;\n}\n\n.grab-copy, .page-copy {\n  color: white;\n}\n\n.list-item-text {\n  color: $bg-color;\n  font-weight: 600;\n}\n\n.work-description {\n  font-size: 1.2rem;\n  font-weight: 400;\n  text-align: center;\n  opacity: 0;\n  animation: fadeInUp .5s $ease-out-quad .6s both;\n}\n\n.grab-copy-wrap {\n  max-width: 900px;\n  margin: 0 auto;\n  margin-bottom: 10vh;\n  opacity: 0;\n  animation: fadeInUpText .6s $ease-out-quad .8s both;\n  @keyframes fadeInUpText {\n    from {\n      opacity: 0;\n      line-height: 2;\n      transform: translate3d(0, 30px, 0);\n    }\n    to {\n      line-height: inherit;\n      opacity: 1;\n      transform: none;\n    }\n  }\n}\n\n.grab-copy {\n  font-size: 2.25rem;\n  padding: 0 $paddingMd;\n  margin-bottom: 0;\n  @include mq($until: desktop) {\n    font-size: 1.6rem;\n  }\n  @include mq($until: tablet) {\n    font-size: 1.3rem;\n  }\n}\n\n.page-section {\n  padding: 0 $paddingLg / 2;\n  @include mq($until: desktop) {\n    padding: 0 $paddingMd / 2;\n  }\n  @include mq($until: tablet) {\n    padding: 0 $paddingSm / 2;\n  }\n}\n\n.page-section-item {\n  flex-grow: 1;\n  width: 300px;\n  padding: $paddingLg;\n  margin: $marginLg / 2;\n  @include mq($until: desktop) {\n    padding: $paddingMd;\n    margin: $marginMd / 2;\n  }\n  @include mq($until: tablet) {\n    padding: $paddingSm;\n    margin: $marginSm / 2;\n  }\n}\n\n.page-section-item-themed {\n  border: 1px solid currentColor;\n}\n\n.page-copy-header {\n  margin-bottom: 15px;\n  letter-spacing: .025em;\n  align-self: flex-start;\n}\n\n.page-copy-wrap {\n  padding: $paddingLg;\n  margin: $marginLg / 2;\n  margin-top: 0;\n  .page-copy {\n    padding: 0;\n    margin: 0;\n  }\n  @include mq($until: desktop) {\n    padding: $paddingMd;\n    margin: $marginMd / 2;\n    margin-top: 0;\n  }\n  @include mq($until: tablet) {\n    padding: $paddingSm;\n    margin: $marginSm / 2;\n    margin-top: 0;\n  }\n}\n\n.page-copy {\n  @include mq($until: tablet) {\n    min-width: 100%;\n    padding: 0 $paddingSm;\n  }\n}\n\n.page-section {\n  max-width: 920px;\n  margin: 0 auto;\n  margin-bottom: $marginLg;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  flex-direction: row;\n  @include mq($until: tablet) {\n    margin-bottom: $marginLg * 2;\n  }\n  .page-copy-wrap {\n    border: 1px solid currentColor;\n    flex-grow: 1;\n  }\n  &.page-copy-left, &.page-copy-right {\n    @include mq($from: tablet) {\n      min-height: 100vh;\n      .page-copy-content {\n        max-width: 440px;\n      }\n      .page-copy-wrap {\n        margin-bottom: 0;\n      }\n    }\n    @include mq($until: tablet) {\n      .page-copy {\n        margin-right: 0;\n        margin-left: 0;\n      }\n    }\n  }\n}\n\n.page-section-column {\n  flex-direction: column;\n}\n\n.page-copy-left, .page-copy-right {\n  justify-content: center;\n  align-items: center;\n  @include mq($from: tablet) {\n    justify-content: flex-start;\n  }\n  @include mq($until: tablet) {\n    .page-copy-wrap {\n      margin-bottom: -$marginSm;\n      padding-bottom: $marginSm * 2;\n    }\n    .page-copy-image-wrap {\n      margin: 0;\n      width: 100%;\n      height: 340px;\n    }\n  }\n}\n\n.page-copy-top, .page-copy-bottom, .page-copy-alone {\n  .page-copy {\n    column-width: 300px;\n    column-gap: $marginLg;\n  }\n}\n\n.page-copy-top {\n  .page-copy-wrap {\n    width: 100%;\n    margin-bottom: -$marginLg;\n    padding-bottom: $marginLg * 2;\n  }\n}\n\n.page-copy-bottom {\n  .page-copy-wrap {\n    width: 100%;\n    margin-top: -$marginLg;\n    padding-top: $marginLg * 2;\n  }\n}\n\n.page-copy-left {\n  @include mq($from: tablet) {\n    flex-direction: row;\n    .page-copy-image-wrap {\n      left: -30%;\n    }\n  }\n}\n\n.page-copy-right {\n  .page-copy-content {\n    float: right;\n  }\n  @include mq($from: tablet) {\n    flex-direction: row-reverse;\n    .page-copy-image-wrap {\n      right: -30%;\n    }\n  }\n}\n\n.page-copy-image-wrap {\n  position: relative;\n  align-self: stretch;\n}\n\n.page-copy-image {\n  position: absolute;\n  box-shadow: $shadowMd;\n}\n\n.page-copy-video-wrap {\n  margin: 0 $marginLg / -2;\n  @include mq($until: desktop) {\n    margin: 0 $marginMd / -2;\n  }\n  @include mq($until: tablet) {\n    margin: 0 $marginSm / -2;\n  }\n}\n\n.page-copy-video {\n  display: block;\n  width: 100%;\n  height: auto;\n  box-shadow: $shadowMd;\n}\n\n.list-header {\n  margin-bottom: 15px;\n}\n\n.skill-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  max-width: 100%;\n  list-style: none;\n  padding: 0;\n}\n\n.skill-list-item {\n  margin-right: 5px;\n  margin-bottom: 5px;\n  padding: 0 5px;\n  background-color: currentColor;\n}\n\n//Image Carousel\n\n@function carousel-center($items) {\n  @return ($items * 300 + 40 + (($items - 1) * 30))\n}\n\n.image-carousel-wrap {\n  margin-bottom: $marginLg;\n}\n\n.image-carousel {\n  list-style: none;\n  overflow-x: scroll;\n  padding: $paddingMd $paddingSm;\n  white-space: nowrap;\n  -webkit-overflow-scrolling: touch;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n}\n\n.carousel-item {\n  display: inline-block;\n  min-width: 300px;\n  max-width: 300px;\n  height: auto;\n  vertical-align: top;\n  line-height: 0;\n  position: relative;\n  box-shadow: $shadowMd;\n  transition: transform .15s ease-out, box-shadow .15s ease-out;\n  &:not(:last-child) {\n    margin-right: $marginMd;\n  }\n  &:hover, &:focus-within {\n    transform: translate3d(0, -15px, 0);\n    box-shadow: 0 0 0 5px currentColor;\n  }\n}\n\n.carousel-image {\n  width: 100%;\n}\n\n//IMAGE GRID\n\n.image-grid {\n  display: flex;\n  justify-content: center;\n  @include mq($until: desktop) {\n    flex-wrap: wrap;\n  }\n}\n\n.image-grid-item {\n  margin: 20px;\n  margin-top: 0;\n  display: flex;\n  justify-content: center;\n}\n\n.grid-image {\n  display: block;\n  height: 200px;\n  width: auto;\n  box-shadow: $shadowMd;\n}\n",
		".work-header {\n  height: 300px;\n  padding: 0 20px;\n  padding-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  @include mq($until: tablet) {\n    padding-top: 40px;\n  }\n}\n\n.work-header-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 500px;\n  z-index: -1;\n  opacity: 0.25;\n  background-image: radial-gradient(circle at top, currentColor, $bg-color 65%);\n  background-size: 100% 300%;\n  background-position-y: 60%;\n}\n\n.work-title {\n  font-size: 2.2em;\n  text-align: center;\n  opacity: 0;\n  animation: fadeInUp .5s $ease-out-quad .4s both;\n}\n\n.work-logo {\n  height: auto;\n  width: auto;\n  max-width: 85vw;\n  max-height: 80px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n  display: block;\n  opacity: 0;\n  animation: fadeInUp .4s $ease-out-quad .4s both;\n}\n\n.work-link {\n  height: 3rem;\n  background-color: currentColor;\n  text-decoration: none;\n  margin-top: 2rem;\n  animation: fadeInUp .4s $ease-out-quad .7s both;\n}\n\n.work-item-list {\n  margin: 0 auto;\n  max-width: 900px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: stretch;\n}\n\n.work-item-wrap {\n  flex-grow: 1;\n  max-width: 400px;\n  min-width: 300px;\n  height: 200px;\n  margin: 0 $marginSm;\n  margin-bottom: $marginLg;\n  position: relative;\n  perspective: 600px;\n  perspective-origin: 50% 200%;\n  transform-style: preserve-3d;\n  @include mq($until: tablet) {\n    margin: 0 $marginMd;\n    margin-bottom: $marginMd;\n    height: 150px;\n  }\n  &:hover {\n    .work-item {\n      transform: translate3d(0, 0, 20px);\n    }\n    .work-item-stack {\n      background-color: currentColor;\n      &:nth-child(1) {\n        opacity: .1;\n        transform: translate3d(0, 0, -60px);\n      }\n      &:nth-child(2) {\n        opacity: .2;\n        transform: translate3d(0, 0, -40px);\n      }\n      &:nth-child(3) {\n        opacity: .3;\n        transform: translate3d(0, 0, -20px);\n      }\n      &:nth-child(4) {\n        opacity: .4;\n        transform: translate3d(0, 0, 0px);\n      }\n    }\n  }\n}\n\n.work-item-stack {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  opacity: 0;\n  background-color: currentColor;\n  transform-origin: 50% 100%;\n  transition: all .3s $ease-out-back;\n  &:nth-child(1) {\n    opacity: .2;\n    transform: translate3d(0, 0, -30px);\n  }\n  &:nth-child(2) {\n    opacity: .4;\n    transform: translate3d(0, 0, -15px);\n  }\n}\n\n.work-item {\n  display: block;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transform-style: preserve-3d;\n  overflow: hidden;\n  transition: all .3s $ease-out-back;\n  &:before, &:after {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 1;\n    background: radial-gradient(at 15% 0%, transparent, rgba(0,0,0,0.15));\n    transition: all .5s $ease-out-quad;\n  }\n  &:after {\n    opacity: 0;\n    background: radial-gradient(at 15% 0%, rgba(255,255,255,0.25), transparent);\n  }\n  &:hover {\n    &:before {\n      opacity: 0;\n    }\n    &:after {\n      opacity: 1;\n    }\n  }\n}\n\n.work-item-contents {\n  transition: all .2s ease-in;\n}\n\n.work-item-logo {\n  display: block;\n  width: 100%;\n  max-width: 240px;\n  max-height: 40px;\n  margin: 0 auto;\n\n  .animxyz-work-item &,\n  .artemis-work-item & {\n    max-height: 100px;\n  }\n}\n\n.work-item-title {\n  display: block;\n  font-size: 1.6em;\n  font-weight: 300;\n  text-align: center;\n}\n\n.work-item-details {\n  display: block;\n  color: rgba(255,255,255,0.75);\n}\n\n//ANIMXYZ\n\n.animxyz-images {\n  @include mq($until: call(carousel-center, 5) ) {\n    .image-carousel {\n      display: block;\n    }\n  }\n}\n\n//YAHERD\n\n.yaherd-image-row-1 {\n  @include mq($until: call(carousel-center, 7) ) {\n    .image-carousel {\n      display: block;\n    }\n  }\n}\n\n//CODECLIMATE\n\n.codeclimate-image-row-1 {\n  @include mq($until: call(carousel-center, 5) ) {\n    .image-carousel {\n      display: block;\n    }\n  }\n}\n\n//CANVS\n\n.canvs-image-row-1 {\n  @include mq($until: call(carousel-center, 5) ) {\n    .image-carousel {\n      display: block;\n    }\n  }\n}\n\n.canvs-responsibilities {\n  .page-copy-image {\n    &:nth-child(1) {\n      top: 5%;\n      left: 50px;\n      width: 400px;\n    }\n    &:nth-child(2) {\n      top: 10%;\n      left: 200px;\n      max-height: 80%;\n      max-width: 640px;\n      z-index: 1;\n    }\n    &:nth-child(3) {\n      bottom: 5%;\n      left: 0;\n      max-height: 60%;\n      max-width: 640px;\n    }\n  }\n  @include mq($until: tablet) {\n    .page-copy-image {\n      &:nth-child(1) {\n        top: 0;\n        left: -25%;\n        width: 300px;\n      }\n      &:nth-child(2) {\n        left: 50%;\n        transform: translateX(-50%);\n        top: 0;\n        height: 340px;\n        width: auto;\n        max-height: initial;\n      }\n      &:nth-child(3) {\n        top: 0;\n        bottom: auto;\n        left: auto;\n        right: -90px;\n      }\n    }\n  }\n}\n\n.canvs-process {\n  .page-copy-image {\n    &:nth-child(1) {\n      top: 5%;\n      right: 0;\n      width: 200px;\n    }\n    &:nth-child(2) {\n      top: 10%;\n      right: 150px;\n      width: 300px;\n    }\n    &:nth-child(3) {\n      bottom: 10%;\n      right: 50px;\n      max-height: 60vh;\n      max-width: 460px;\n    }\n    &:nth-child(4) {\n      bottom: 5%;\n      right: 200px;\n      width: 400px;\n    }\n  }\n  @include mq($until: tablet) {\n    .page-copy-image {\n      &:nth-child(1) {\n        top: 0;\n        right: auto;\n        left: -10px;\n        width: 150px;\n      }\n      &:nth-child(2) {\n        top: 0;\n        right: -10px;\n        width: 150px;\n      }\n      &:nth-child(3) {\n        left: 50%;\n        transform: translateX(-50%);\n        width: auto;\n        max-height: initial;\n        height: 300px;\n        bottom: 7%;\n        z-index: 1;\n      }\n      &:nth-child(4) {\n        left: 5%;\n        bottom: 5%;\n        right: auto;\n        width: 240px;\n        z-index: 1;\n      }\n    }\n  }\n}\n\n//MECHOSYSTEMS\n\n.mecho-image-row-1 {\n  @include mq($until: call(carousel-center, 5) ) {\n    .image-carousel {\n      display: block;\n    }\n  }\n}\n\n//TALLY\n\n.tally-image-row-1 {\n  @include mq($until: call(carousel-center, 7) ) {\n    .image-carousel {\n      display: block;\n    }\n  }\n}\n",
		".m-logo-random-line {\n  line {\n    stroke: white;\n    stroke-width: 1;\n    stroke-dasharray: 500;\n    stroke-dashoffset: 500;\n    animation: dashOffset 1.2s $ease-in-quad forwards;\n  }\n}\n\n.site-header {\n  .m-logo-random-line {\n    line {\n      stroke-width: 0.5;\n    }\n  }\n}\n\n@keyframes dashOffset {\n  to {\n    stroke-dashoffset: 0;\n  }\n}\n",
		"$logo-blue:   $primaryBlue;\n$logo-red:    $primaryRed;\n\n.m-logo-red, .m-logo-blue {\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n}\n\n.m-red, .m-blue {\n  fill-opacity: 0;\n  fill: white;\n  position: relative;\n}\n\n.m-logo-stroke {\n  fill: none;\n  stroke: white;\n  stroke-width: .5;\n}\n\n.m-red {\n  animation: pulseLogoWhiteRed 1s $ease-in-quad .5s forwards;\n}\n\n.m-blue {\n  animation: pulseLogoWhiteBlue 1s $ease-in-quad .5s forwards;\n}\n\n.m-logo-stroke-blue {\n  &.m-logo-stroke-across {\n    animation: fadeInLeft100 .3s $ease-out-back .1s both,\n               fadeOutRight100 .3s $ease-in-back 1.5s forwards;\n  }\n  &.m-logo-stroke-diag {\n    animation: fadeInUpLeft100 .3s $ease-out-back .4s both,\n               fadeOutDownRight100 .3s $ease-in-back 1.8s forwards;\n  }\n  &.m-logo-stroke-up {\n    animation: fadeInUp100 .3s $ease-out-back both,\n               fadeOutDown100 .3s $ease-in-back 1.4s forwards;\n  }\n}\n\n.m-logo-stroke-red {\n  &.m-logo-stroke-diag {\n    animation: fadeInUpRight100 .3s $ease-out-back .3s both,\n               fadeOutDownLeft100 .3s $ease-in-back 1.7s forwards;\n  }\n  &.m-logo-stroke-up {\n    animation: fadeInUp100 .3s $ease-out-back .2s both,\n               fadeOutDown100 .3s $ease-in-back 1.6s forwards;\n  }\n}\n\n//ANIMATIONS\n\n@keyframes pulseLogoWhiteRed {\n  50% {\n    fill: white;\n    fill-opacity: 1;\n  }\n  100% {\n    fill: $logo-red;\n    fill-opacity: 0.75;\n  }\n}\n\n@keyframes pulseLogoWhiteBlue {\n  50% {\n    fill: white;\n    fill-opacity: 1;\n  }\n  100% {\n    fill: $logo-blue;\n    fill-opacity: 0.65;\n  }\n}\n",
		".parallaxM__yellowM, .parallaxM__purpleRect, .parallaxM__whiteDot {\n  transform-origin: 50% 50%;\n  transition: opacity .3s linear;\n}\n\n.animated {\n  .parallaxM__yellowM {\n    animation: fadeInShrink .3s $ease-out-back both;\n  }\n\n  .parallaxM__purpleRect {\n    animation: fadeInPurpleRect .3s $ease-out-back .25s both;\n  }\n\n  .parallaxM__whiteDot {\n    animation: fadeInGrow .3s $ease-out-back .5s both;\n  }\n}\n\n@keyframes fadeInPurpleRect {\n  from {\n    opacity: 0;\n    transform: translate3d(0, -100%, 0);\n  }\n  to {\n    opacity: 0.65;\n    transform: none;\n  }\n}\n"
	],
	"names": [],
	"mappings": "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"
}