---
import HomeLayout from '@layouts/HomeLayout.astro'
import Logo from '@components/Logo.astro'
import Beliefs from '@components/Beliefs.astro'
import WorkList from '@components/WorkList.astro'
---

<HomeLayout>
	<section class="m-center-wrap">
		<div class="m-logo-section">
			<Logo size="15rem" />
		</div>
		<h1 class="my-name xyz-in" xyz="fade small-2 duration-5 delay-7">Mattan Ingram</h1>
		<button class="m-logo-click-me xyz-in" xyz="fade small-2 duration-5 delay-8">Click me</button>
	</section>

	<section class="grab-copy-wrap home-section xyz-in" xyz="fade down duration-5 delay-8">
		<p class="grab-copy">
			NYC product designer and CSS nerd raised on the
			<span class="gif-hover"
				>1984 Mac<span class="gif-video-wrap">
					<video autoplay loop muted playsinline>
						<source src="assets/videos/1984mac.webm" type="video/webm" />
					</video>
				</span>
			</span>,
			<span class="gif-hover"
				>Top Gun<span class="gif-video-wrap">
					<video autoplay loop muted playsinline>
						<source src="assets/videos/topgun.webm" type="video/webm" />
					</video>
				</span></span
			>, and
			<span class="gif-hover"
				>Sesame Street<span class="gif-video-wrap">
					<video autoplay loop muted playsinline>
						<source src="assets/videos/sesame.webm" type="video/webm" />
					</video>
				</span></span
			>. <br /> Making glowing rectangles do cool stuff.
		</p>
	</section>

	<!-- <section class="home-section">
		<h2 class="home-section-title">Beliefs</h2>
		<Beliefs />
	</section> -->

	<section class="work-section home-section xyz-in" xyz="fade down-2 duration-5 delay-8">
		<div class="work-stack">
			<h2 class="home-section-title">Work</h2>
			<WorkList folder="work" />
		</div>
		<div class="work-stack">
			<h2 class="home-section-title">Projects</h2>
			<WorkList folder="projects" />
		</div>
	</section>
</HomeLayout>

<script is:inline>
	const initLogoButton = () => {
		const btn = document.querySelector('.m-logo-click-me')
		const logoWrap = document.querySelector('.m-logo-section .m-logo-wrap')

		if (!btn || !logoWrap || btn.dataset.logoClickBound === 'true') {
			return
		}

		const handleClick = () => {
			logoWrap.dispatchEvent(new CustomEvent('m-logo:next', { bubbles: true }))
		}

		btn.addEventListener('click', handleClick)
		btn.dataset.logoClickBound = 'true'
	}

	document.addEventListener('astro:page-load', initLogoButton)
</script>

<style lang="scss">
	@use '../styles/scssVariables' as *;

	.m-center-wrap {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		width: 100%;
		min-height: 26rem;
		max-height: 48rem;
		padding-top: 15svh;
		padding-inline: var(--spacing-10);
	}

	.m-logo-section {
		position: relative;
	}

	.my-name {
		text-align: center;
		letter-spacing: 0.03em;
		margin-block: var(--spacing-8);
	}

	.m-logo-click-me {
		color: white;
		opacity: 0.75;
		font-size: 0.75rem;
		padding: var(--spacing-2);
		text-transform: uppercase;
		letter-spacing: 0.075rem;
		cursor: pointer;
		transition: 0.15s var(--ease-out);
		transition-property: scale, opacity;
		&:hover {
			opacity: 0.85;
			scale: 1.05;
		}
		&:active {
			opacity: 1;
			scale: 0.95;
		}
	}
	.gif-hover {
		cursor: pointer;
		position: relative;
		white-space: nowrap;
		font-weight: 500;

		.gif-video-wrap {
			position: absolute;
			display: block;
			opacity: 0;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%) scale(1, 0);
			border-radius: 20px;
			overflow: hidden;
			transition: all 0.35s var(--ease-out-back);
			z-index: -2;
			pointer-events: none;

			video {
				display: block;
			}

			&:before {
				content: '';
				position: absolute;
				inset: 0;
				width: 100%;
				height: 100%;
				box-shadow: inset 0 0 50px 30px var(--bg-color);
				z-index: 1;
			}
		}

		&:after {
			content: '';
			background-color: rgb(from var(--primary-blue) r g b / 0.6);
			position: absolute;
			z-index: -1;
			bottom: 0.15em;
			left: 0;
			right: 0;
			height: 0.25em;
			transition: all 0.15s ease-out;
		}

		&:hover {
			.gif-video-wrap {
				opacity: 1;
				transform: translate(-50%, -50%) scale(1, 1);
				transition-duration: 0.2s;
			}

			&:after {
				height: 1em;
			}
		}
	}

	.home-section {
		width: var(--page-content-width);
		max-width: 100%;
		margin: 0 auto;
		margin-top: var(--page-section-margin);
		padding: var(--page-gutter);
	}

	.home-section-title {
		opacity: 0.6;
		font-size: 2.5rem;
		font-weight: 400;
		margin-bottom: var(--spacing-12);

		@media (width < $breakpoint-sm) {
			font-size: 2rem;
			margin-bottom: var(--spacing-8);
		}
	}

	.work-section {
		display: flex;
		justify-content: center;
		gap: var(--spacing-12);

		@media (width < $breakpoint-lg) {
			gap: var(--spacing-10);
		}

		@media (width < $breakpoint-sm) {
			gap: var(--spacing-6);
		}
	}

	.work-stack {
		flex-grow: 1;
		flex-basis: 0;
	}
</style>
